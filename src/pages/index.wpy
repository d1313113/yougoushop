<style lang="less" scpoed>
.search {
  padding: 20rpx 16rpx;
  background-color: #ff2d4a;
  input {
    height: 60rpx;
    line-height: 60rpx;
    text-align: center;
    background-color: #fff;
    border-radius: 10rpx;
  }
}
/*轮播图  */
.swiper {
  height: 340rpx;
  swiper-item {
    height: 340rpx;
    .slide-image {
      width: 750rpx;
      height: 340rpx;
    }
  }
}
/*导航  */
.nav {
  display: flex;
  padding: 30rpx 0rpx;
  background-color: #fff;
  > navigator {
    flex: 1;
    display: flex;
    justify-content: center;
    > image {
      width: 128rpx;
      height: 140rpx;
    }
  }
}

/*楼层  */
.fool {
  &-title {
    padding-top: 30rpx;
    image {
      width: 750rpx;
      height: 59rpx;
    }
  }
  &-body {
    display: flex;
    background-color: #fff;
    padding: 20rpx 16rpx 10rpx 16rpx;
    &-left {
      image {
        width: 232rpx;
        height: 386rpx;
      }
    }
    &-right {
      display: flex;
      flex-wrap: wrap;
      image {
        margin-left: 10rpx;
        width: 233rpx;
        height: 188rpx;
      }
    }
  }
  &-foot {
    image {
      width: 750rpx;
      height: 180rpx;
    }
  }
}

/* 没有更多 */
.nomore {
  height: 230rpx;
  text-align: center;
}

/* 返回顶部 */
.toTop {
  width: 90rpx;
  height: 90rpx;
  border-radius: 50%;
  background-color: #fafafa;
  position: fixed;
  right: 16rpx;
  bottom: 60rpx;
  text-align: center;
  image {
    width: 24rpx;
    height: 14rpx;
  }
}
</style>
<template>
  <view class="container">
    <!-- 搜索框 -->
    <view class='search'>
      <input placeholder='搜索'></input>
    </view>

    <!-- 轮播图 -->
    <swiper indicator-dots="true" autoplay="true" interval="3000" duration="1000" indicator-active-color="#fff" circular="true" indicator-color="#b1b4cf" class="swiper">
      <block wx:for="{{imgUrls}}" wx:key="{{index}}">
        <swiper-item>
          <navigator url="{{item.navigator_url}}" open-type="{{item.open_type}}">
          <image src="{{item.image_src}}" class="slide-image img" />
          </navigator>
        </swiper-item>
      </block>
    </swiper>

    <!-- 导航 -->
    <view class='nav'>
      <navigator wx:for="{{ navArr }}" wx:key="index" open-type="{{item.open_type}}" url="{{item.navigator_url}}" hover-class="none">
        <image src='{{ item.image_src }}'></image>
      </navigator>
    </view>


    <!-- 楼层 -->
    <view class="fool" wx:for="{{foolArr}}" wx:key="index">
      <!-- 头部 -->
      <view class="fool-title">
        <image src="{{item.floor_title.image_src}}"></image>
      </view>
      <!-- 主体 -->
      <view class="fool-body">
        <!-- 左侧 -->
        <view class="fool-body-left">
          <navigator url="{{item.product_list[0].navigator_url}}"  wx:key="index" wx:for-item="secondItem" wx:for-index="secondIndex">
            <image src="{{item.product_list[0].image_src}}"></image>
          </navigator>
        </view>
        <!-- 右侧 -->
        <view class="fool-body-right">
          <navigator url="{{secondItem.navigator_url}}" wx:for="{{foolRightArr[index]}}" wx:key="index" wx:for-item="secondItem"
          open-type="{{secondItem.open_type}}"
          >
            <image src="{{secondItem.image_src}}" style="width:{{secondItem.image_width+'rpx'}}"></image>
          </navigator>
        </view>
      </view>
      <!-- 底部 -->
      <view class="fool-foot" wx:if="{{index===0}}">
        <navigator url="">
          <image src="/upload/pic_banner_small.png"></image>
        </navigator>
      </view>
    </view>

    <!-- 没有更多 -->
    <view class="nomore">
      我是有底线的!
    </view>

    <!-- 返回顶部 -->
    <view class="toTop">
      <image src="/images/arrow_top@2x.png"></image>
      <view>顶部</view>
    </view>

  </view>
</template>
<script>
import wepy from 'wepy'

export default class Index extends wepy.page {
  data = {
    img: [[]],
    imgUrls: [],
    navArr: [],
    foolArr: [],
    foolRightArr: []
  }
  config = {
    navigationBarTitleText: '优购'
  }
  onLoad() {
    console.log('onLoad')

    // 获取轮播图图片
    wepy
      .request({
        url: 'https://itjustfun.cn/api/public/v1/home/swiperdata', // 开发者服务器接口地址",
        method: 'GET',
        dataType: 'json' // 如果设为json，会尝试对返回的数据做一次 JSON.parse
        // success: res => {
        //   if (res.statusCode === 200) {
        //     this.imgUrls = res.data.data
        //     this.$apply()
        //   }
        // }
      })
      .then(res => {
        if (res.statusCode === 200) {
          this.imgUrls = res.data.data
          this.$apply()
        }
      })

    // 获取导航数据
    wepy
      .request({
        url: 'https://itjustfun.cn/api/public/v1/home/catitems', // 开发者服务器接口地址",
        method: 'GET',
        dataType: 'json' // 如果设为json，会尝试对返回的数据做一次 JSON.parse
        // success: res => {
        //   if (res.data.meta.status === 200) {
        //     this.navArr = res.data.data
        //     this.$apply()
        //   }
        // }
      })
      .then(res => {
        if (res.data.meta.status === 200) {
          this.navArr = res.data.data
          this.$apply()
        }
      })

    // 获取楼层数据
    wepy
      .request({
        url: 'https://itjustfun.cn/api/public/v1/home/floordata', // 开发者服务器接口地址",
        method: 'GET',
        dataType: 'json' // 如果设为json，会尝试对返回的数据做一次 JSON.parse
        // success: res => {
        //   // console.log(res)
        //   if (res.data.meta.status === 200) {
        //     this.foolArr = res.data.data
        //     this.foolArr.forEach((item, i1) => {
        //       this.foolRightArr[i1] = []
        //       item.product_list.forEach((item2, i2) => {
        //         if (i2 !== 0) {
        //           this.foolRightArr[i1].push(item2)
        //         }
        //       })
        //     })
        //     this.$apply()
        //   }
        // }
      })
      .then(res => {
        // console.log(res)
        if (res.data.meta.status === 200) {
          this.foolArr = res.data.data
          this.foolArr.forEach((item, i1) => {
            this.foolRightArr[i1] = []
            item.product_list.forEach((item2, i2) => {
              if (i2 !== 0) {
                this.foolRightArr[i1].push(item2)
              }
            })
          })
          this.$apply()
        }
      })
  }
}
</script>
