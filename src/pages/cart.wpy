<style lang="less">
.address-info {
  height: 222rpx;
  position: relative;
  background-color: #fff;
}
.address-info .item {
  padding: 22rpx 16rpx;
  display: flex;
  flex-wrap: wrap;
  font-size: 32rpx;
  line-height: 1.3;
}

.address-info .item .col {
  display: flex;
  align-items: center;
}
.address-info .item .note {
  width: 160rpx;
}
.address-info .item .detail {
  max-width: 480rpx;
}
.address-info .item .address-phone {
  margin-right: 82rpx;
}
.address-info .item .icon-jiantouyou {
  position: absolute;
  right: 0;
}
.address-info .item .icon-jiantouyou:before {
  font-size: 24rpx;
  color: #999;
  line-height: 1;
  width: 15rpx;
  height: 25rpx;
}
.address-border {
  width: 100%;
  height: 15rpx;
}

.cart-list {
  background-color: #fff;
}
.shop-head {
  height: 88rpx;
  display: flex;
  align-items: center;
  border-bottom: 1rpx solid #ddd;
  position: relative;
  padding: 0 88rpx;
  // 屏蔽店铺全选后，把左内边距减少
  padding-left: 30rpx;
}
.shop-head-info {
  display: flex;
  font-size: 32rpx;
  align-items: center;
}
.shop-head-info .shop-name {
  margin-left: 10rpx;
}
.icon-xuanze,
.icon-xuanze-fill {
  position: absolute;
  left: 0;
}
.icon-xuanze:before,
.icon-xuanze-fill:before {
  width: 32rpx;
  height: 32rpx;
}
.icon-xuanze {
  color: #ccc;
}
.icon-xuanze-fill {
  color: #ff2d4a;
}
.icon-dianpu {
  color: #999;
}

.shop-head .icon-bianji {
  position: absolute;
  right: 0;
}

.shop-head .icon-bianji:before {
  width: 32rpx;
  height: 32rpx;
  color: #999;
}

.product-item {
  display: flex;
  padding: 30rpx 20rpx 30rpx 0;
  margin-left: 20rpx;
  border-top: 1rpx solid #ddd;
  margin-top: -1rpx;
  align-items: center;
  position: relative;
}

.product-left {
  width: 200rpx;
  height: 200rpx;
  background-color: #eee;
  margin-right: 26rpx;
}
.product-left .product-img {
  width: 200rpx;
  height: 200rpx;
}
.product-right {
  width: 480rpx;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  position: relative;
}
.product-name {
  height: 84rpx;
  font-size: 30rpx;
  line-height: 1.4;
  /* 多行文字隐藏省略号 */
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}
.product-price {
  color: #ff2d4a;
}
.product-price-symbol,
.product-price-decimal {
  font-size: 28rpx;
}
.product-price-integer {
  font-size: 44rpx;
}

.cart-list .product-item {
  display: flex;
  padding: 20rpx 16rpx 20rpx 0;
  border-top: 1rpx solid #ddd;
  margin-top: -1rpx;
  margin-left: 88rpx;
}

.product-left {
  margin-right: 20rpx;
}

.product-left,
.product-left .product-img {
  width: 160rpx;
  height: 160rpx;
}
.product-right {
  width: 464rpx;
}
.product-price-symbol,
.product-price-decimal {
  font-size: 24rpx;
}
.product-price-integer {
  font-size: 34rpx;
}

.product-item .icon-xuanze,
.product-item .icon-xuanze-fill {
  left: -88rpx;
}

.product-detail {
  font-size: 24rpx;
  line-height: 1.25;
  color: #999;
  margin: 20rpx 0 30rpx;
}
.product-count {
  position: absolute;
  right: 0;
  bottom: 0;
  letter-spacing: 2rpx;
}

.fixed-bar {
  width: 750rpx;
  height: 98rpx;
  padding: 18rpx 250rpx 18rpx 88rpx;
  box-sizing: border-box;
  background-color: #fff;
  position: fixed;
  bottom: 0;
  z-index: 11;
  display: flex;
  align-items: center;
  justify-content: space-between;
  .icon-xuanze {
    padding-right: 60rpx;
  }
}
.buy-button {
  width: 230rpx;
  height: 98rpx;
  line-height: 98rpx;
  font-size: 30rpx;
  background-color: #ff2d4a;
  color: #fff;
  position: absolute;
  right: 0;
  text-align: center;
}

.select-all {
  font-size: 30rpx;
}
.total-body {
  display: flex;
  align-items: baseline;
  font-size: 30rpx;
}
.total-foot {
  margin-top: 10rpx;
  color: #999;
}
.cart-empty {
  flex-direction: column;
  padding: 100rpx 0;
  &-img {
    width: 180rpx;
    height: 180rpx;
    margin-bottom: 50rpx;
  }
  &-txt {
    font-size: 28rpx;
  }
  .login-btn {
    margin-top: 30rpx;
    border: 1rpx solid #ff2d4a;
    color: #ff2d4a;
    height: 60rpx;
    line-height: 60rpx;
    font-size: 24rpx;
  }
}
.product-count-eidt {
  display: flex;
  position: absolute;
  right: 0;
  bottom: 0;
  .count-min,
  .count-add {
    width: 60rpx;
    height: 50rpx;
    box-sizing: border-box;
    border: 4rpx solid #666;
    line-height: 50rpx;
    font-size: 28rpx;
    display: flex;
    align-items: center;
    justify-content: center;
    &.disabled {
      border-color: #ccc;
      color: #ccc;
    }
  }
  .count-min {
    border-radius: 5rpx 0 0 5rpx;
  }
  .count-add {
    border-radius: 0 5rpx 5rpx 0;
  }
  .count-number {
    height: 50rpx;
    line-height: 50rpx;
    width: 80rpx;
    text-align: center;
  }
}
.iconfont-tap {
  font-family: 'iconfont' !important;
  font-size: 32rpx;
  font-style: normal;
  -webkit-font-smoothing: antialiased;

  min-width: 88rpx;
  min-height: 88rpx;
  display: flex;
  justify-content: center;
  align-items: center;
}
</style>
<template>
  <view class="divider"></view>
  <view class="cart-list">
    <view class="shop-head">
      <view class="shop-head-info">
        <view class="iconfont icon-shop flex-center icon-dianpu"></view>
        <text class="shop-name">优购生活馆</text>
      </view>
    </view>
    <block wx:for="{{ goodsCartArr }}" wx:key="index">
      <view class="product-item">
        <view class="iconfont-tap icon-xuanze {{item.selectStatus ? 'icon-xuanze-fill':''}}" @tap="changeSelectStatus({{index}})"></view>
        <navigator url="/pages/goods_detail?goods_id={{ item.goods_id }}" class="product-left">
          <image class="product-img" src="{{ item.goods_small_logo }}" />
        </navigator>
        <view class="product-right">
          <navigator url="/pages/goods_detail?goods_id={{ item.goods_id }}" class="product-name">
            {{ item.goods_name }}
          </navigator>
          <view class="product-detail">
            <!-- 商品简介 -->
          </view>
          <view class="product-price">
            <text class="product-price-symbol">￥</text>
            <text class="product-price-integer">{{ item.goods_price }}</text>
            <text class="product-price-decimal">.00</text>
          </view>
          <view class="product-count-eidt">
            <view class="count-min {{item.goods_number==1?'disabled':''}}" @tap="doCount({{index}},{{-1}})">-</view>
            <input class="count-number" type="number" value="{{ item.goods_number }}" @input="changNumber({{index}})"/>
            <view class="count-add" @tap="doCount({{index}},{{1}})">+</view>
          </view>
        </view>
      </view>
    </block>
  </view>
  <view class="bottom-space"></view>
  <view class="fixed-bar">
    <view class="iconfont-tap icon-xuanze {{ selectStatusCount==goodsCartArr.length?'icon-xuanze-fill':''}}" @tap="selectAll({{selectStatusCount==goodsCartArr.length}})"></view>
    <text class="select-all">全选</text>
    <view class="total">
      <view class="total">
        <view class="total-body">
          <view class="total-note">合计：</view>
          <view class="product-price">
            <text class="product-price-symbol">￥</text>
            <text class="product-price-integer">{{countPrice/100}}</text>
            <text class="product-price-decimal">.00</text>
          </view>
        </view>
        <view class="total-foot">包含运费</view>
      </view>
    </view>
    <view class="buy-button">
      结算(0)
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'

export default class Cart extends wepy.page {
  config = {
    navigationBarTitleText: '购物车'
  }
  data = {
    goodsCartArr: [],
    selectStatusCount: 0,
    countPrice: 0
  }
  onLoad() {
    console.log('onLoad')
  }
  onShow() {
    console.log('onShow')
    this.goodsCartArr = wepy.getStorageSync('goodsCartArr') || []
  }
  computed= {
    goodsCartArr() {
      // 让选中状态默认为0
      this.selectStatusCount = 0
      // 让总价默认为0
      this.countPrice = 0
      // 得到选中的商品数量
      this.goodsCartArr.forEach(item => {
        if (item.selectStatus) {
          this.selectStatusCount++
          this.countPrice += item.goods_number * 100 * item.goods_price
        }
      })
      return this.goodsCartArr
    }
  }
  methods = {
    doCount(index, method) {
      this.goodsCartArr[index].goods_number += method
      if (this.goodsCartArr[index].goods_number < 1) {
        wepy.showModal({
          title: '提示',
          content: '这是一个模态弹窗'
        })
          .then(res => {
            if (res.confirm) {
              // console.log('用户点击确定')
              this.goodsCartArr.splice(index, 1)
            } else if (res.cancel) {
              // console.log('用户点击取消')
              this.goodsCartArr[index].goods_number = 1
            }
            this.$apply()
          })
      }
    },
    // 修改商品件数
    changNumber(index, event) {
      // console.log(event.detail.value)
      // 将原有的值存起来
      let oldNum = this.goodsCartArr[index].goods_number
      // 获取用户输入的值
      let num = parseInt(event.detail.value)
      console.log(num)
      if (num < 1 || isNaN(num)) {
        // 如果输入的值不符合就返回未修改前的值
        return oldNum
      } else {
        // 正常值的话修改数量
        this.goodsCartArr[index].goods_number = num
      }
    },
    // 修改选中状态
    changeSelectStatus(index) {
      this.goodsCartArr[index].selectStatus = !this.goodsCartArr[index].selectStatus
    },
    // 全选和全不选
    selectAll(bol) {
      this.goodsCartArr.forEach(item => {
        // 让商品中每一项的选中状态与全选保持一致
        item.selectStatus = !bol
      })
    }
  }
}
</script>
